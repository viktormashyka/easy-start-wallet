{"version":3,"file":"static/js/649.ed13f43b.chunk.js","mappings":";mOAGaA,EAAYC,EAAAA,GAAAA,IAAH,glBA4BTC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8UAiBLG,EAAcH,EAAAA,GAAAA,OAAH,kQAaXI,EAAIJ,EAAAA,GAAAA,EAAH,sOAWDK,EAASL,EAAAA,GAAAA,OAAH,mYAmBNM,EAAMN,EAAAA,GAAAA,IAAH,oGAKHO,EAAYP,EAAAA,GAAAA,EAAH,uCAGTQ,EAAiBR,EAAAA,GAAAA,OAAH,8UClFrBS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,oBACpDC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,SAAS,yBAE3CI,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACb,EAAD,UAAYa,GAAhB,GAGpB,EAEDC,QAAQC,IAAI,8BAEL,IAAMC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAUjB,OADAJ,QAAQC,IAAI,gCAEV,UAACvB,EAAD,YACE,SAACK,EAAD,wDACA,SAACD,EAAD,CAAauB,KAAK,SAAlB,qBACA,SAACtB,EAAD,yEACA,SAAC,KAAD,CACEuB,cAAe,CAAEf,MAAO,GAAIE,SAAU,IACtCc,iBAAkBnB,EAClBoB,SAhBe,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BV,QAAQC,IAAI,qCACZD,QAAQC,IAAI,8BAA4BQ,GACxCN,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAQG,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,mBAAOC,QAAQ,QAAf,oBAEE,SAACjC,EAAD,CAAOyB,KAAK,OAAOR,KAAK,QAAQiB,YAAY,gBAC5C,SAAClB,EAAD,CAAWC,KAAK,QAAQkB,UAAU,YAGpC,mBAAOF,QAAQ,WAAf,uBAEE,SAACjC,EAAD,CAAOyB,KAAK,WAAWR,KAAK,cAC5B,SAACD,EAAD,CAAWC,KAAK,iBAElB,UAACZ,EAAD,YACE,SAAC,KAAD,CAAM+B,GAAG,SAAT,UACE,SAAChC,EAAD,CAAQqB,KAAK,SAAb,uBAEF,SAAClB,EAAD,CAAgBkB,KAAK,SAArB,oCAMX,YCvEc,SAASY,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACC,EAAA,EAAD,WACE,SAACjB,EAAD,QAIP","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Container = styled.div`\n  margin: auto;\n  /* margin-top: 117px;\n  max-height: 552px;\n  max-width: 426px; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 12px;\n  color: #010101;\n  flex-direction: column;\n  border: 2px solid white;\n  border-radius: 30px;\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 56px 83px 56px 83px;\n  font-family: 'Roboto';\n  font-style: normal;\n  width: 280px;\n  height: 496px;\n  background-color: #ffffff;\n\n  @media screen and (min-width: 768px) {\n    width: 426px;\n    height: 552px;\n  }\n`;\n\nexport const Input = styled(Field)`\nfont-size: 12px;\n  margin-bottom: 32px;\n  margin-top: 5px;\n  display: flex;\n  padding-left: 19.54px;\n  // flex-direction: column;\n  width: 258.92px;\n  height: 52px;\n  border-radius: 30px;\n  background: #f6f7fb;\n  border-style: none;\n  border: none;\n   &: hover,  &:focus {\n    border:  non;\n  }\n`;\nexport const ButtonGoogl = styled.button`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  width: 119.2px;\n  height: 40px;\n  background: #f6f7fb;\n  border-radius: 26px;\n  border-style: none;\n  letter-spacing: 0.02em;\n  cursor: pointer;\n  border: none;\n`;\nexport const P = styled.p`\n  // margin-left: auto;\n  // margin-right: auto;\n  font-size: 12px;\n  line-height: 14px;\n  max-width: 210px;\n  max-height: 28px;\n  color: #52555f;\n  // display: flex;\n  // justify-content: center;\n`;\nexport const Button = styled.button`\n  width: 122.17px;\n  height: 44px;\n  background: #f5f6fb;\n  border-radius: 16px;\n  border-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #52555f;\n  font-weight: 700;\n  cursor: pointer;\n  &: hover,  &:focus {\n    background: #ff751d;\n    color: #ffffff;\n    // border-style: none;\n    border: none;\n  } ;\n`;\nexport const Div = styled.div`\n  display: flex;\n  margin-top: '40px';\n  justify-content: space-between;\n`;\nexport const ErrorText = styled.p`\n  color: red;\n`;\nexport const RegisterButton = styled.button`\n  width: 122.17px;\n  height: 44px;\n\n  border-radius: 16px;\n  border-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  cursor: pointer;\n  background: #ff751d;\n  color: #ffffff;\n\n  border: none;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport {\n  Button,\n  ButtonGoogl,\n  Container,\n  Div,\n  Input,\n  P,\n  ErrorText,\n  RegisterButton,\n} from './RegisterForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport { register } from 'redux/auth/authOperations';\nimport { Link } from 'react-router-dom';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Enter your email'),\n  password: Yup.string().min(8).max(20).required('Enter your password'),\n});\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconsole.log('RegisterForm ---> start'); //!\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    console.log('RegisterForm ---> handleSubmit'); //!\n    console.log('RegisterForm ---> value:', value); //!\n    dispatch(register(value));\n    resetForm();\n  };\n\n  console.log('RegisterForm ---> render'); //!\n  return (\n    <Container>\n      <P>You can log in with your Google Account:</P>\n      <ButtonGoogl type=\"button\">Google</ButtonGoogl>\n      <P>Or log in using an email and password, after registering:</P>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <label htmlFor=\"login\">\n            Email:\n            <Input type=\"text\" name=\"email\" placeholder=\"your email\" />\n            <FormError name=\"email\" component=\"div\" />\n            {/* <br /> */}\n          </label>\n          <label htmlFor=\"password\">\n            Password:\n            <Input type=\"password\" name=\"password\" />\n            <FormError name=\"password\" />\n          </label>\n          <Div>\n            <Link to=\"/login\">\n              <Button type=\"button\">LOG IN</Button>\n            </Link>\n            <RegisterButton type=\"submit\">REGISTRATION</RegisterButton>\n          </Div>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Main } from '../components/Main/Main';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <Main>\n        <RegisterForm />\n      </Main>\n    </div>\n  );\n}\n"],"names":["Container","styled","Input","Field","ButtonGoogl","P","Button","Div","ErrorText","RegisterButton","schema","Yup","shape","email","required","password","min","max","FormError","name","render","message","console","log","RegisterForm","dispatch","useDispatch","type","initialValues","validationSchema","onSubmit","value","resetForm","register","autoComplete","htmlFor","placeholder","component","to","Register","Helmet","Main"],"sourceRoot":""}