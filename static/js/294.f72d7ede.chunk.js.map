{"version":3,"file":"static/js/294.f72d7ede.chunk.js","mappings":"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","sources":["hooks/useScreenResizing.js","components/ExpensesForm/ExpensesForm.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getScreenResizing() {\n  const { clientWidth: width, clientHeight: height } = document.documentElement;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useScreenResizing() {\n  const [screenResizing, setScreenResizing] = useState(getScreenResizing());\n\n  useEffect(() => {\n    function handleResize() {\n      setScreenResizing(getScreenResizing());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return screenResizing;\n}\n","import { useDispatch } from 'react-redux';\nimport { addTransaction } from '../../redux/transaction/transactionOperations';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { Formik, ErrorMessage } from 'formik';\nimport useScreenResizing from '../../hooks/useScreenResizing';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { DataBox } from '../DataBox/DataBox';\nimport {\n  InputField,\n  FormBox,\n  DataWrapper,\n  FormInputWrapper,\n  SecondaryInputWrapper,\n  CalculatorIcon,\n  TextSecondary,\n  BtnSubmitList,\n  BtnSubmitItem,\n  BtnSubmit,\n  BtnSecondary,\n  InputsBox,\n  FormTopWrapper,\n  IconWrapper,\n  ErrorNotification,\n  ErrorMessageWrapper,\n} from './ExpensesForm.styled';\n\nconst options = [\n  { value: 'Transport', label: 'Transport' },\n  { value: 'Products', label: 'Products' },\n  { value: 'Health', label: 'Health' },\n  { value: 'Alcohol', label: 'Alcohol' },\n  { value: 'Entertainment', label: 'Entertainment' },\n  { value: 'Housing', label: 'Housing' },\n  { value: 'Technique', label: 'Technique' },\n  { value: 'Communal, communication', label: 'Communal, communication' },\n  { value: 'Sports, hobbies', label: 'Sports' },\n  { value: 'Education', label: 'Education' },\n  { value: 'Hobbies', label: 'Hobbies' },\n  { value: 'Other', label: 'Others' },\n];\n\nconst initialValues = {\n  category: '',\n  description: '',\n  sum: '',\n};\n\nconst schema = Yup.object().shape({\n  category: Yup.string().required('Select category'),\n  description: Yup.string()\n    .min(3)\n    .max(16)\n    .required('Enter product description'),\n  sum: Yup.number('Invalid sum, only numbers').required('Enter sum'),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorNotification>{message}</ErrorNotification>}\n    />\n  );\n};\n\nexport const ExpensesForm = () => {\n  const viewPort = useScreenResizing();\n  const dispatch = useDispatch();\n\n  const date = moment().format('DD.MM.YYYY');\n\n  // const getFormData = values => {\n  //   console.log('getFormData::', values);\n  // };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(\n            addTransaction({\n              ...values,\n              transactionsType: 'expenses',\n              date,\n            })\n          );\n          resetForm();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue,\n          resetForm,\n        }) => {\n          return (\n            <FormBox onSubmit={handleSubmit}>\n              <FormTopWrapper>\n                <DataWrapper>\n                  <DataBox date={date} />\n                </DataWrapper>\n                <InputsBox>\n                  <FormInputWrapper>\n                    <InputField\n                      as=\"input\"\n                      type=\"text\"\n                      id=\"description\"\n                      name=\"description\"\n                      placeholder=\"Product description\"\n                      onChange={handleChange}\n                      value={values.description}\n                    />\n                    <CustomSelect\n                      name=\"category\"\n                      options={options}\n                      value={values.category}\n                      type=\"Product category\"\n                      disabled={isSubmitting}\n                      isLoading={isSubmitting}\n                      onChange={values =>\n                        setFieldValue('category', values.value)\n                      }\n                    ></CustomSelect>\n                  </FormInputWrapper>\n                  <SecondaryInputWrapper>\n                    <div>\n                      <TextSecondary\n                        as=\"input\"\n                        type=\"number\"\n                        id=\"sum\"\n                        name=\"sum\"\n                        pattern=\"^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$\"\n                        title=\"Ð’alance must be whole numbers (or decimal numbers)\"\n                        placeholder={\n                          viewPort.width > 767 ? '00.00' : '00.00 UAH'\n                        }\n                        onChange={handleChange}\n                        value={values.sum}\n                      />\n                      <ErrorMessageWrapper>\n                        {errors.description && touched.description ? (\n                          <FormError name=\"description\" component=\"p\" />\n                        ) : errors.category && touched.category ? (\n                          <FormError name=\"category\" component=\"p\" />\n                        ) : errors.sum && touched.sum ? (\n                          <FormError name=\"sum\" component=\"p\" />\n                        ) : null}\n                      </ErrorMessageWrapper>\n                    </div>\n                    <IconWrapper>\n                      <CalculatorIcon />\n                    </IconWrapper>\n                  </SecondaryInputWrapper>\n                </InputsBox>\n              </FormTopWrapper>\n              <BtnSubmitList>\n                <BtnSubmitItem>\n                  <BtnSubmit type=\"submit\" disabled={isSubmitting}>\n                    Input\n                  </BtnSubmit>\n                </BtnSubmitItem>\n                <BtnSubmitItem>\n                  <BtnSecondary\n                    type=\"reset\"\n                    onClick={resetForm}\n                    disabled={isSubmitting}\n                  >\n                    Clear\n                  </BtnSecondary>\n                </BtnSubmitItem>\n              </BtnSubmitList>\n            </FormBox>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n"],"names":["getScreenResizing","document","documentElement","width","clientWidth","height","clientHeight","options","value","label","initialValues","category","description","sum","schema","Yup","shape","required","min","max","FormError","name","render","message","ExpensesForm","viewPort","useState","screenResizing","setScreenResizing","useEffect","handleResize","window","addEventListener","removeEventListener","useScreenResizing","dispatch","useDispatch","date","moment","format","validationSchema","onSubmit","values","resetForm","addTransaction","transactionsType","errors","touched","handleChange","handleSubmit","isSubmitting","setFieldValue","DataBox","as","type","id","placeholder","onChange","CustomSelect","disabled","isLoading","pattern","title","component","onClick"],"sourceRoot":""}