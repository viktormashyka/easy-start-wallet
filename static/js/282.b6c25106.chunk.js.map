{"version":3,"file":"static/js/282.b6c25106.chunk.js","mappings":"iOAGaA,EAAYC,EAAAA,GAAAA,IAAH,ibAoBTC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8UAiBLG,EAAcH,EAAAA,GAAAA,OAAH,kQAaXI,EAAIJ,EAAAA,GAAAA,EAAH,sOAWDK,EAASL,EAAAA,GAAAA,OAAH,mYAmBNM,EAAMN,EAAAA,GAAAA,IAAH,oGAKHO,EAAYP,EAAAA,GAAAA,EAAH,uC,mBC3EhBQ,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,oBACpDC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,SAAS,yBAE3CI,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACZ,EAAD,UAAYY,GAAhB,GAGpB,EAEYC,EAAY,WAKvB,OACE,UAACrB,EAAD,YACE,SAACK,EAAD,wDACA,SAACD,EAAD,CAAakB,KAAK,SAAlB,qBACA,SAACjB,EAAD,yEACA,SAAC,KAAD,CACEkB,cAAe,CAAEX,MAAO,GAAIE,SAAU,IACtCU,iBAAkBf,EAClBgB,SAZe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZC,GACD,EAMG,UAKE,UAAC,KAAD,CAAMG,aAAa,MAAnB,WACE,mBAAOC,QAAQ,QAAf,oBAEE,SAAC7B,EAAD,CAAOoB,KAAK,OAAOJ,KAAK,QAAQc,YAAY,gBAC5C,SAACf,EAAD,CAAWC,KAAK,QAAQe,UAAU,YAGpC,mBAAOF,QAAQ,WAAf,uBAEE,SAAC7B,EAAD,CAAOoB,KAAK,WAAWJ,KAAK,cAC5B,SAACD,EAAD,CAAWC,KAAK,iBAElB,SAACX,EAAD,WACE,SAACD,EAAD,CAAQgB,KAAK,SAAb,6BAMX,ECzDc,SAASY,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACd,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/auth/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Container = styled.div`\n  margin: auto;\n  margin-top: 117px;\n  max-height: 552px;\n  max-width: 426px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 12px;\n  color: #010101;\n  flex-direction: column;\n  border: 2px solid white;\n  border-radius: 30px;\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 56px 83px 56px 83px;\n  font-family: 'Roboto';\n  font-style: normal;\n`;\n\nexport const Input = styled(Field)`\nfont-size: 22px;\n  margin-bottom: 32px;\n  margin-top: 5px;\n  display: flex;\n  padding-left: 19.54px;\n  // flex-direction: column;\n  width: 258.92px;\n  height: 52px;\n  border-radius: 30px;\n  background: #f6f7fb;\n  border-style: none;\n  border: none;\n   &: hover,  &:focus {\n    border:  non;\n  }\n`;\nexport const ButtonGoogl = styled.button`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  width: 119.2px;\n  height: 40px;\n  background: #f6f7fb;\n  border-radius: 26px;\n  border-style: none;\n  letter-spacing: 0.02em;\n  cursor: pointer;\n  border: none;\n`;\nexport const P = styled.p`\n  // margin-left: auto;\n  // margin-right: auto;\n  font-size: 12px;\n  line-height: 14px;\n  max-width: 210px;\n  max-height: 28px;\n  color: #52555f;\n  // display: flex;\n  // justify-content: center;\n`;\nexport const Button = styled.button`\n  width: 122.17px;\n  height: 44px;\n  background: #f5f6fb;\n  border-radius: 16px;\n  border-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #52555f;\n  font-weight: 700;\n  cursor: pointer;\n  &: hover,  &:focus {\n    background: #ff751d;\n    color: #ffffff;\n    // border-style: none;\n    border: none;\n  } ;\n`;\nexport const Div = styled.div`\n  display: flex;\n  margin-top: '40px';\n  justify-content: space-between;\n`;\nexport const ErrorText = styled.p`\n  color: red;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport {\n  Button,\n  ButtonGoogl,\n  Container,\n  Div,\n  Input,\n  P,\n  ErrorText,\n} from './LoginForm.styled';\nimport * as yup from 'yup';\n\n// changed in const schema Yup on yup\nconst schema = yup.object().shape({\n  email: yup.string().email('Invalid email').required('Enter your email'),\n  password: yup.string().min(8).max(20).required('Enter your password'),\n});\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const LoginForm = () => {\n  const handleSubmit = (velues, { resetForm }) => {\n    console.log(velues);\n    resetForm();\n  };\n  return (\n    <Container>\n      <P>You can log in with your Google Account:</P>\n      <ButtonGoogl type=\"button\">Google</ButtonGoogl>\n      <P>Or log in using an email and password, after registering:</P>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <label htmlFor=\"login\">\n            Email:\n            <Input type=\"text\" name=\"email\" placeholder=\"your email\" />\n            <FormError name=\"email\" component=\"div\" />\n            {/* <br /> */}\n          </label>\n          <label htmlFor=\"password\">\n            Password:\n            <Input type=\"password\" name=\"password\" />\n            <FormError name=\"password\" />\n          </label>\n          <Div>\n            <Button type=\"submit\">LOG IN</Button>\n          </Div>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Container","styled","Input","Field","ButtonGoogl","P","Button","Div","ErrorText","schema","yup","shape","email","required","password","min","max","FormError","name","render","message","LoginForm","type","initialValues","validationSchema","onSubmit","velues","resetForm","console","log","autoComplete","htmlFor","placeholder","component","Login","Helmet"],"sourceRoot":""}